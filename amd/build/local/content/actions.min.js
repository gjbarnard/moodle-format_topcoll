define("format_topcoll/local/content/actions",["exports","core_courseformat/local/content/actions","core/log"],(function(_exports,_actions,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Collapsed Topics Course state actions dispatcher.
   *
   * @module     format_topcoll/local/content/actions
   * @class      format_topcoll/local/content/actions
   * @copyright  2024 G J Barnard based upon work done by:
   * @copyright  2021 Ferran Recio <ferran@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_actions=_interopRequireDefault(_actions),_log=_interopRequireDefault(_log);class _default extends _actions.default{create(){super.create()}_checkSectionlist(_ref){let{state:state}=_ref;_log.default.debug("_checkSectionlist state.course.sectionlist "+state.course.sectionlist),_log.default.debug("_checkSectionlist state.course.numsectionswithoutdeligated "+state.course.numsectionswithoutdeligated),this._setAddSectionLocked(state.course.sectionlist.length>=state.course.maxsections)}_setAddSectionLocked(locked){const courseAddSection=this.getElement(this.selectors.COURSEADDSECTION);if(courseAddSection){const addSection=courseAddSection.querySelector(this.selectors.ADDSECTION);_log.default.debug("_setAddSectionLocked addSection "+addSection.classList),addSection&&addSection.classList.toggle(this.classes.DISPLAYNONE,locked);courseAddSection.querySelector(this.selectors.MAXSECTIONSWARNING).classList.toggle(this.classes.DISPLAYNONE,!locked)}}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=actions.min.js.map