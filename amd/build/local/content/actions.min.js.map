{"version":3,"file":"actions.min.js","sources":["../../../src/local/content/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Collapsed Topics Course state actions dispatcher.\n *\n * @module     format_topcoll/local/content/actions\n * @class      format_topcoll/local/content/actions\n * @copyright  2024 G J Barnard based upon work done by:\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport BaseActions from 'core_courseformat/local/content/actions';\n\nimport Log from 'core/log';\n\nexport default class extends BaseActions {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        super.create();\n    }\n\n    /**\n     * Check the section list and disable some options if needed.\n     *\n     * @param {Object} detail the update details.\n     * @param {Object} detail.state the state object.\n     */\n    _checkSectionlist({state}) {\n        Log.debug('_checkSectionlist state.course.sectionlist ' + state.course.sectionlist);\n        Log.debug('_checkSectionlist state.course.numsectionswithoutdeligated ' + state.course.numsectionswithoutdeligated);\n        // Disable \"add section\" actions if the course max sections has been exceeded.\n        this._setAddSectionLocked(state.course.sectionlist.length >= state.course.maxsections);\n        //this._setAddSectionLocked(state.course.numsectionswithoutdeligated >= state.course.maxsectionswithoutdeligated);\n    }\n\n    /**\n     * Disable all add sections actions.\n     *\n     * @param {boolean} locked the new locked value.\n     */\n    _setAddSectionLocked(locked) {\n        const courseAddSection = this.getElement(this.selectors.COURSEADDSECTION);\n        if (courseAddSection) {\n            const addSection = courseAddSection.querySelector(this.selectors.ADDSECTION);\n            Log.debug('_setAddSectionLocked addSection ' + addSection.classList);\n            if (addSection) {\n                addSection.classList.toggle(this.classes.DISPLAYNONE, locked);\n            }\n            const noMoreSections = courseAddSection.querySelector(this.selectors.MAXSECTIONSWARNING);\n            noMoreSections.classList.toggle(this.classes.DISPLAYNONE, !locked);\n        }\n    }\n}\n"],"names":["BaseActions","create","_checkSectionlist","state","debug","course","sectionlist","numsectionswithoutdeligated","_setAddSectionLocked","length","maxsections","locked","courseAddSection","this","getElement","selectors","COURSEADDSECTION","addSection","querySelector","ADDSECTION","classList","toggle","classes","DISPLAYNONE","MAXSECTIONSWARNING"],"mappings":";;;;;;;;;wLA6B6BA,iBAKzBC,eACUA,SASVC,4BAAkBC,MAACA,yBACXC,MAAM,8CAAgDD,MAAME,OAAOC,0BACnEF,MAAM,8DAAgED,MAAME,OAAOE,kCAElFC,qBAAqBL,MAAME,OAAOC,YAAYG,QAAUN,MAAME,OAAOK,aAS9EF,qBAAqBG,cACXC,iBAAmBC,KAAKC,WAAWD,KAAKE,UAAUC,qBACpDJ,iBAAkB,OACZK,WAAaL,iBAAiBM,cAAcL,KAAKE,UAAUI,yBAC7Df,MAAM,mCAAqCa,WAAWG,WACtDH,YACAA,WAAWG,UAAUC,OAAOR,KAAKS,QAAQC,YAAaZ,QAEnCC,iBAAiBM,cAAcL,KAAKE,UAAUS,oBACtDJ,UAAUC,OAAOR,KAAKS,QAAQC,aAAcZ"}